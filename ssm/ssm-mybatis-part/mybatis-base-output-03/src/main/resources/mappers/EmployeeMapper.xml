<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->


<mapper namespace="com.atguigu.mapper.EmployeeMapper">
    <!--
          id = "接口中的方法名"
          parameterType = "接口中传入方法的参数类型"
          resultType = "返回实体类对象：包.类名"  处理结果集 自动封装
          注意:sql语句后不要出现";"号
              查询：select标签
              增加：insert标签
              修改：update标签
              删除：delete标签
      -->

    <!-- DML -->
    <delete id="deleteById">
        delete
        from t_emp
        where emp_id = #{id}
    </delete>

    <!-- 返回单个简单类型
         resultType语法：
                类的全限定符号
                别名简称  mybatis 提供了72种别名，如果没有写全路径符号
     -->

    <select id="queryNameById" resultType="string">
        select emp_name
        from t_emp
        where emp_id = #{id}
    </select>

    <select id="querySalaryById" resultType="_double">
        select emp_salary
        from t_emp
        where emp_id = #{id}
    </select>

    <!-- 返回单个自定义实体类型 -->
    <select id="queryById" resultType="employee">
        select *
        from t_emp
        where emp_id = #{id}
    </select>

    <!-- 返回map类型 -->
    <!-- 返回工资最高的员工的姓名和他的工资 -->
    <select id="selectEmpNameAndMaxSalary" resultType="map">
        SELECT emp_name                            员工姓名,
               emp_salary                          员工工资,
               (SELECT AVG(emp_salary) FROM t_emp) 部门平均工资
        FROM t_emp
        WHERE emp_salary = (SELECT MAX(emp_salary)
                            FROM t_emp)
    </select>


    <!-- 返回List类型
        切记：返回值是集合，resultType不需要指定集合类型，只需要指定泛型即可！
        why？
            mybatis -> ibatis  -> selectOne | selectList -> selectOne 调用selectList
     -->
    <select id="queryNamesBySalary" resultType="string">
        select emp_name
        from t_emp
        where emp_salary > #{salary}
    </select>

    <select id="queryAll" resultType="employee">
        select * from t_emp;
    </select>

    <!-- 主键回显
            1. 自增长主键回显 mysql auto_increment
               useGeneratedKeys="true" 我们想要自动增加主键值
               keyColumn="emp_id" 主键列的值
               keyProperty="empId" 接收主键值的属性！！！
     -->
    <insert id="insertEmp" useGeneratedKeys="true" keyColumn="emp_id" keyProperty="empId">
        insert into t_emp(emp_name,emp_salary)
        value(#{empName}, #{empSalary})
    </insert>

</mapper>