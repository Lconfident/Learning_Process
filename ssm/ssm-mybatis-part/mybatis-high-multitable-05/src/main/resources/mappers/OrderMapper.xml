<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
      mapper为映射的根节点，用来管理DAO接口
      namespace指定DAO接口的完整类名，表示mapper配置文件管理哪个DAO接口(包.接口名)
      mybatis会依据这个接口动态创建一个实现类去实现这个接口，而这个实现类是一个Mapper对象
   -->


<mapper namespace="com.atguigu.mapper.OrderMapper">
    <!--
          id = "接口中的方法名"
          parameterType = "接口中传入方法的参数类型"
          resultType = "返回实体类对象：包.类名"  处理结果集 自动封装
          注意:sql语句后不要出现";"号
              查询：select标签
              增加：insert标签
              修改：update标签
              删除：delete标签
      -->
    <!-- 自定义映射关系 -->
    <resultMap id="orderMap" type="order">
        <!-- 第一层属性 order对象 -->
        <!-- order 的主键id -->
        <id column="order_id" property="orderId"/>
        <!-- 普通列 -->
        <result column="order_name" property="orderName"/>
        <result column="customer_id" property="customerId"/>

        <!-- 对象属性赋值
             property 对象属性名
             javaType 对象类型
         -->
        <association property="customer" javaType="customer">
            <id column="customer_id" property="customerId"/>
            <result column="customer_name" property="customerName"/>
        </association>
    </resultMap>
    <!-- Order queryOrderById(Integer id); -->
    <select id="queryOrderById" resultMap="orderMap">
        select * from t_order tor
            JOIN t_customer tur
            on tor.customer_id = tur.customer_id
        where tor.order_id=#{id}
    </select>

</mapper>